// Main WECC 240 bus model
//
// Most specifications in this file should be provided by the config.glm file
// unless they are considered invariant across the scenarios being considered.
//

//#define DYNAMIC_MODEL // enable loading of geodata

#include "config.glm"

#version -ge 4.3.14

#set keep_progress=TRUE // progress update does not overwrite previous update
#set suppress_repeat_messages=FALSE

// cleanup previous dumpdata
#system rm -f wecc240_{failed,exception}*.*

clock {
    timezone ${TIMEZONE};
    starttime ${STARTTIME};
    stoptime ${STOPTIME};
}

//#option verbose // enable this to diagnostics of OPF solution
//#option debug // enable traceback of python exceptions, among other output

module pypower
{
    message_flags VERBOSE|DEBUG;    
    maximum_iterations ${MAXIMUM_ITERATIONS};
    maximum_timestep ${MAXIMUM_TIMESTEP};
    stop_on_failure FALSE; // ${STOP_ON_FAILURE};
    controllers ${CONTROLLERS_FILE};
    default_reactive_power_fraction 0.5;
    enable_opf TRUE;
}

//
// Load the PSS/E model
//
#input "${RAWFILE}"

//
// Load the GIS data
//
#include "${GISDATA}"

//
// Load loads data
//
#ifdef DYNAMIC_MODEL
#include "../data/loads.glm"
#endif

//
// Load powerplant data
//
#ifdef DYNAMIC_MODEL
#include "../data/powerplants.glm"
#include "../data/powerplants_gis.glm"
#include "../data/powerplants_cost.glm"
#else
// fake gencost for unmodified model (delete this when powerplants data loads ok)
#for GEN in ${FIND class=gen}
object gencost {
    parent "${GEN}";
    startup 10;
    shutdown 0;
    model POLYNOMIAL;
    costs "10,${RANDOM},0.001";
}
#done
#endif

//
// Load weather geodata
//
#ifdef DYNAMIC_MODEL
#include "../data/weather.glm"
#endif

//
// Model fixups
//
#include "fixups.glm"

//
// Save the final result to JSON
//
#set savefile="${SAVEFILE}"

//
// Setup data collection
//
module recorders;
